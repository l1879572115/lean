server:
  port: 8090 # 后期该微服务多实例，端⼝从8090递增（10个以内）
spring:
  application:
    name: auto-deliver
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/springcloud?useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
  jpa:
    database: MySQL
    show-sql: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
eureka:
  client:
    service-url:
      defaultZone: http://eurekaServer8761:8761/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@

#针对的被调⽤⽅微服务名称,不加就是全局⽣效
lagou-service-resume:
  ribbon:
  #请求连接超时时间
  #ConnectTimeout: 2000
  #请求处理超时时间
  #ReadTimeout: 5000
  #对所有操作都进⾏重试
    OkToRetryOnAllOperations: true
    ####根据如上配置，当访问到故障请求的时候，它会再尝试访问⼀次当前实例（次数
    由MaxAutoRetries配置），
    ####如果不⾏，就换⼀个实例进⾏访问，如果还不⾏，再换⼀次实例访问（更换次数
    由MaxAutoRetriesNextServer配置），
    ####如果依然不⾏，返回失败信息。
    MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第⼀次调⽤
    MaxAutoRetriesNextServer: 0 #切换实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整
#hystrix 配置
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
#            Hystrix的超时时⻓设置
            timeoutInMilliseconds: 15000


# 开启geign的熔断功能
feign:
  hystrix:
    enabled: true
#Feign对请求压缩和响应压缩的⽀持
  compression:
    request:
      enabled: true
      # 设置触发压缩的⼤⼩下限，此处也是默认值
      min-request-size: 2048
      # 设置压缩的数据类型，此处也是默认值
      mime-types: text/html,application/xml,application/json
    response:
      enabled: true

logging:
  level:
    # Feign⽇志只会对⽇志级别为debug的做出响应
    com.lagou.edu.controller.service.ResumeServiceFeignClient: debug
